{"version":3,"sources":["Components/GoodsList/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","name","id","API_URL","getAll","a","fetch","then","response","json","allgoods","get5First","sort","prev","curr","localeCompare","slice","getRedGoods","filter","App","useState","localGoods","setLocalGoods","getAllGoods","allGoodsFromServer","getFirst5","first5","getRed","redGoods","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAMaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEEF,UAAU,aACVG,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCVdC,EAAO,wEAEN,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACkBC,MAAMH,GAC1BI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFxB,cACCC,EADD,yBAIEA,GAJF,4C,sBAOA,IAAMC,EAAS,uCAAG,sBAAAN,EAAA,sEACTD,IADS,uCAEpBQ,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKZ,KAAKc,cAAcD,EAAKb,SAClDe,MAAM,EAAG,IAHW,2CAAH,qDAMTC,EAAW,uCAAG,sBAAAZ,EAAA,sEACXD,IADW,uCAEtBc,QAAO,SAACpB,GAAD,MAA6C,QAAfA,EAAKE,UAFpB,2CAAH,qDC0CTmB,EApDO,WACpB,MAAoCC,mBAAiB,IAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAW,uCAAG,4BAAAlB,EAAA,sEACeD,IADf,OACZoB,EADY,OAGlBF,EAAcE,GAHI,2CAAH,qDAMXC,EAAS,uCAAG,4BAAApB,EAAA,sEACKM,IADL,OACVe,EADU,OAGhBJ,EAAcI,GAHE,2CAAH,qDAMTC,EAAM,uCAAG,4BAAAtB,EAAA,sEACUY,IADV,OACPW,EADO,OAGbN,EAAcM,GAHD,2CAAH,qDAMZ,OACE,sBAAKhC,UAAU,MAAf,UACE,uDACA,wBACEiC,KAAK,SACLjC,UAAU,SACVkC,QAASP,EAHX,4BAQA,wBACEM,KAAK,SACLjC,UAAU,SACVkC,QAASL,EAHX,gCAQA,wBACEI,KAAK,SACLjC,UAAU,SACVkC,QAASH,EAHX,4BAOA,cAAC,EAAD,CAAWhC,MAAO0B,QClDxBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.afaf7bbd.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      {goods.map(good => (\n        <li\n          key={good.id}\n          className=\"list__item\"\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport async function getAll(): Promise<Good[]> {\n  const allgoods = await fetch(API_URL)\n    .then(response => response.json());\n\n  return allgoods;\n}\n\nexport const get5First = async (): Promise<Good[]> => {\n  return (await getAll())\n    .sort((prev, curr) => prev.name.localeCompare(curr.name))\n    .slice(0, 5);\n};\n\nexport const getRedGoods = async (): Promise<Good[]> => {\n  return (await getAll())\n    .filter((good: { color: string; }) => good.color === 'red');\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './Components/GoodsList/GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nconst App: React.FC = () => {\n  const [localGoods, setLocalGoods] = useState<Good[]>([]);\n\n  const getAllGoods = async () => {\n    const allGoodsFromServer = await getAll();\n\n    setLocalGoods(allGoodsFromServer);\n  };\n\n  const getFirst5 = async () => {\n    const first5 = await get5First();\n\n    setLocalGoods(first5);\n  };\n\n  const getRed = async () => {\n    const redGoods = await getRedGoods();\n\n    setLocalGoods(redGoods);\n  };\n\n  return (\n    <div className=\"api\">\n      <h1>Dynamic list of Goods</h1>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={getAllGoods}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={getFirst5}\n      >\n        Load first 5 goods\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={getRed}\n      >\n        Load red goods\n      </button>\n      <GoodsList goods={localGoods} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}